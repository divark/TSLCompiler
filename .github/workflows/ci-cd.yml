on: [push]

name: Continuous Integration / Continuous Deployment (Unix-based)

jobs:
  check:
    name: Verify code behaves as intended
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04, macos-latest, macos-13]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install dependencies for the project (macOS, Linux)
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            pipx install meson
            meson wrap install fmt
            sudo apt update && sudo apt install bison flex cmake libfl-dev clang
            echo "CXX=clang++" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew upgrade && brew install meson bison flex llvm
            echo "CXX=$(brew --prefix llvm)/bin/clang++" >> $GITHUB_ENV
            # on macOS, bison and flex are already provided, but we want
            # to use the newer versions provided by Homebrew, so we have
            # to append them into the path via GitHub's GITHUB_PATH variable.
            echo "$(brew --prefix bison)/bin" >> $GITHUB_PATH
            echo "$(brew --prefix flex)/bin" >> $GITHUB_PATH
            # Likewise, we want to use the latest header files for flex.
            echo "LDFLAGS=-L$(brew --prefix flex)/lib" >> $GITHUB_ENV
            echo "CPPFLAGS=-I$(brew --prefix flex)/include" >> $GITHUB_ENV
            # Finally, we want to support macOS since Big Sur.
            echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> $GITHUB_ENV
            meson wrap install fmt
          fi

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup build directory
        run: meson setup build

      - name: Run all tests
        run: meson test -C build

  upload:
    name: Upload compiled binaries
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04, macos-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install dependencies for the project (macOS, Linux)
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            pipx install meson
            meson wrap install fmt
            sudo apt update && sudo apt install libbison-dev bison flex cmake libfl-dev clang
            echo "CXX=clang++" >> $GITHUB_ENV
            echo "LDFLAGS=-static-libstdc++" >> $GITHUB_ENV
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew upgrade && brew install meson bison flex llvm
            # On an Intel-based mac, clang++ provided by Apple does not support all C++20 features.
            # Therefore, it's safe to just download the latest, no matter what type of mac is being
            # used.
            echo "CXX=$(brew --prefix llvm)/bin/clang++" >> $GITHUB_ENV
            # on macOS, bison and flex are already provided, but we want
            # to use the newer versions provided by Homebrew, so we have
            # to append them into the path via GitHub's GITHUB_PATH variable.
            echo "$(brew --prefix bison)/bin" >> $GITHUB_PATH
            echo "$(brew --prefix flex)/bin" >> $GITHUB_PATH
            # Likewise, we want to use the latest header files for flex.
            echo "LDFLAGS=-L$(brew --prefix flex)/lib" >> $GITHUB_ENV
            echo "CPPFLAGS=-I$(brew --prefix flex)/include" >> $GITHUB_ENV
            # Finally, we want to support macOS since Big Sur.
            echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> $GITHUB_ENV
            meson wrap install fmt
          fi

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup build directory
        run: meson setup build -Dbuild_for_release=true

      - name: Compile the project
        run: meson compile -C build

      - name: Strip unnecessary bits from TSLChecker
        run: strip build/tslchecker

      - name: Upload TSLChecker binary
        uses: actions/upload-artifact@v4
        with:
          path: build/tslchecker
          name: tslchecker-${{ matrix.os }}
